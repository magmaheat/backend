import time
L = [
    '  0 1 2 ',
    '0 - - -',
    '1 - - -',
    '2 - - -'
     ]


def game():
    a = input("Сыграем в крестики - нолики? (Y/N)\n").lower()
    if 'y' in a:
        name_one = input("Введите имя игрока, который будет играть за крестики\n")
        name_two = input("Введите имя игрока, который будет играть за нолики\n")
        print(*L, sep='\n')
        casher = []  # кэшируем данные, чтобы не повторялись координаты
        count = 0  # с помощью счетчика будем определять чья очередь ходить и дальнешие действия
    while True:  # основной игровой цикл
        while True:  # цикл завершается при проверки кэша на наличие координат
            while True:  # цикл проверяет введенные координаты
                # на правильность и соответствие с координатной сеткой
                count += 1
                if count % 2 != 0:
                    K = list(input(f'{name_one}, введите координаты x и y для крестика без пробела:\n'))
                else:
                    K = list(input(f'{name_two}, введите координаты x и y для нолика без пробела:\n'))
                if all([
                    len(K) == 2,
                    *(x.isdigit() for x in K)
                ]):  # проверяем количество введенных данных и принадлежность к int
                    if all([
                        int(K[0]) < 3 and int(K[1]) < 3,
                        int(K[0]) >= 0 and int(K[1]) >= 0
                    ]):  # если все ок, то смотрим, входят ли координы в нашу сетку
                        break  # с координатами все ок
                    else:
                        count -= 1  # при ошибках возвращаемся в начало цикла,
                        # чтобы алгоритм не перешел к след. игроку,
                        # вернем счетчик на прежние значения
                        print("Введены неверные координаты, попробуйте еще раз")
                        print()
                        time.sleep(2)  # приостоновим програму,
                        # чтобы поток информации был более плавным
                        print(*L, sep='\n')
                        print()

                else:
                    count -= 1
                    print('Неверный ввод, попробуйте еще раз!')
                    print()
                    time.sleep(2)
                    print(*L, sep='\n')
                    print()
            K = list(int(x) + 1 for x in K)  # у нас есть разница координат между
            # сеткой в консоли и указанными пользователем,
            # добавим +1 для полного соответствия
            x, y = K
            if K not in casher:
                casher.append(K)
                break  # все ок если координаты ставятся в пустые клетки
                # в ином случае уходим в начало цикла,
                # где спрашиваем координаты по новой
            else:
                print()
                print("Координаты вводятся только в пустые ячейки, попробуйте еще раз")
                print()
                time.sleep(2)
                print(*L, sep='\n')
                print()
                time.sleep(2)
        A = L[y].split()  # так как строка не изменяемый объект,
        # превращаем ее в список и меняем элемент списка
        if count % 2 != 0:
            A[x] = 'x'
        else:
            A[x] = '0'
        L[y] = ' '.join(A)  # собираем список обратно в строку
        c = list(z[2:] for z in L[1:])  # создаем специальную строку,
        # состоящую только из координат предначначенных для игры
        c = ''.join(c).replace(' ', '')
        if count % 2 != 0:  # выбираем условие выигрыша
            z = 'xxx'
        else:
            z = '000'
        if any([
            c[0] + c[1] + c[2] == z,
            c[3] + c[4] + c[5] == z,
            c[6] + c[7] + c[8] == z,
            c[0] + c[3] + c[6] == z,
            c[1] + c[4] + c[7] == z,
            c[2] + c[5] + c[8] == z,
            c[0] + c[4] + c[8] == z,
            c[2] + c[4] + c[6] == z,
        ]):  # при выполнении хотя бы одного условия мы выиграли
            print()
            print(*L, sep='\n')
            print()
            if count % 2 != 0:
                print(f'{name_one}, ты выиграл!')
            else:
                print(f"{name_two}, ты выиграл!")
            print()
            print('Игра окончена.')
            break
        elif '-' not in c:  # выводим ничью при заполнении всех координат
            print()
            print("Ничья!")
            print()
            print('Игра окончена')
            break
        print(*L, sep='\n')
    else:
        print("До встречи!")


game()
